grangertest(ECTN$삼포천2.TN ~ ECTN$영산호3.TN, order=3)
# 대조군
grangertest(ECTN$삼포천1.EC ~ ECTN$영산호3.EC, order=2)
grangertest(ECTN$삼포천1.TN ~ ECTN$영산호3.TN, order=2)
# 대조군
grangertest(ECTN$삼포천1.EC ~ ECTN$영산호3.EC, order=3)
grangertest(ECTN$삼포천1.TN ~ ECTN$영산호3.TN, order=3)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$삼포천2.EC ~ ECTN$영산호3.EC, order=2)
grangertest(ECTN$삼포천2.TN ~ ECTN$영산호3.TN, order=2)
# 대조군
grangertest(ECTN$삼포천1.EC ~ ECTN$영산호3.EC, order=2)
grangertest(ECTN$삼포천1.TN ~ ECTN$영산호3.TN, order=2)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$삼포천2.EC ~ ECTN$영산호3.EC, order=2)
grangertest(ECTN$삼포천2.TN ~ ECTN$영산호3.TN, order=2)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$삼포천2.EC ~ ECTN$영산호3.EC, order=1)
grangertest(ECTN$삼포천2.TN ~ ECTN$영산호3.TN, order=1)
# 대조군
grangertest(ECTN$삼포천1.EC ~ ECTN$영산호3.EC, order=1)
grangertest(ECTN$삼포천1.TN ~ ECTN$영산호3.TN, order=1)
d
# 대조군
grangertest(ECTN$삼포천1.EC ~ ECTN$영산호3.EC, order=1)
grangertest(ECTN$삼포천1.TN ~ ECTN$영산호3.TN, order=1)
# 대조군
grangertest(ECTN$삼포천1.EC ~ ECTN$영산호3.EC, order=2)
grangertest(ECTN$삼포천1.TN ~ ECTN$영산호3.TN, order=2)
# Data loading
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별.csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
View(ECTN)
library(kohonen)
# Original
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=7, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
coolBlueHotRed <- function(n, alpha=1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
par(mfrow=c(3,2))
for (i in 13:18) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
par(mfrow=c(3,2))
attach(ECTN)
plot.ts(영산호2.EC, main="영산호2(EC)")
plot.ts(영산호2.TN, main="영산호2(T-N)")
plot.ts(영암천.EC, main="영암천(EC)")
plot.ts(영암천.TN, main="영암천(T-N)")
plot.ts(영암천1.EC, main="영암천1(EC)")
plot.ts(영암천1.TN, main="영암천1(T-N)")
par(mfrow=c(1,1))
require(forecast)
ndiffs(ECTN$영산호2.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영산호2.TN, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천.TN, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천1.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천1.TN, alpha=0.05, test=c("kpss"))
par(mfrow=c(3,2))
for (i in 13:18) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
ndiffs(ECTN$영산호2.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영산호2.TN, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천.TN, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천1.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천1.TN, alpha=0.05, test=c("kpss"))
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$영암천.EC ~ ECTN$영산호2.EC, order=1)
require(forecast)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$영암천.EC ~ ECTN$영산호2.EC, order=1)
library(lmtest)
?grangertest
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$영암천.EC ~ ECTN$영산호2.EC, order=1)
grangertest(ECTN$영암천.TN ~ ECTN$영산호2.TN, order=1)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$영암천.EC ~ ECTN$영산호2.EC, order=2)
grangertest(ECTN$영암천.TN ~ ECTN$영산호2.TN, order=2)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN$영암천.EC ~ ECTN$영산호2.EC, order=3)
grangertest(ECTN$영암천.TN ~ ECTN$영산호2.TN, order=3)
ECTN$diff1_영산호2.EC <- diff(ECTN$영산호2.EC, 1)
ECTN$diff1_영산호2.TN <- diff(ECTN$영산호2.TN, 1)
ECTN$diff1_영암천.EC <- diff(ECTN$영암천.EC, 1)
ECTN$diff1_영암천.TN <- diff(ECTN$영암천.TN, 1)
ECTN$diff1_영암천1.EC <- diff(ECTN$영암천1.EC, 1)
ECTN$diff1_영암천1.TN <- diff(ECTN$영암천1.TN, 1)
View(ECTN)
ECTN$diff1_영산호2.EC <- diff(ECTN_1$영산호2.EC, 1)
ECTN$diff1_영산호2.TN <- diff(ECTN_1$영산호2.TN, 1)
ECTN$diff1_영암천.EC <- diff(ECTN_1$영암천.EC, 1)
ECTN$diff1_영암천.TN <- diff(ECTN_1$영암천.TN, 1)
ECTN$diff1_영암천1.EC <- diff(ECTN_1$영암천1.EC, 1)
ECTN$diff1_영암천1.TN <- diff(ECTN_1$영암천1.TN, 1)
ECTN_1 <- NULL
ECTN$diff1_영산호2.EC <- diff(ECTN_1$영산호2.EC, 1)
ECTN$diff1_영산호2.TN <- diff(ECTN_1$영산호2.TN, 1)
ECTN$diff1_영암천.EC <- diff(ECTN_1$영암천.EC, 1)
ECTN$diff1_영암천.TN <- diff(ECTN_1$영암천.TN, 1)
ECTN$diff1_영암천1.EC <- diff(ECTN_1$영암천1.EC, 1)
ECTN$diff1_영암천1.TN <- diff(ECTN_1$영암천1.TN, 1)
diff1_영산호2.EC <- diff(ECTN_1$영산호2.EC, 1)
diff1_영산호2.TN <- diff(ECTN_1$영산호2.TN, 1)
diff1_영암천.EC <- diff(ECTN_1$영암천.EC, 1)
diff1_영암천.TN <- diff(ECTN_1$영암천.TN, 1)
diff1_영암천1.EC <- diff(ECTN_1$영암천1.EC, 1)
diff1_영암천1.TN <- diff(ECTN_1$영암천1.TN, 1)
diff1_영산호2.EC <- diff(ECTN$영산호2.EC, 1)
diff1_영산호2.TN <- diff(ECTN$영산호2.TN, 1)
diff1_영암천.EC <- diff(ECTN$영암천.EC, 1)
diff1_영암천.TN <- diff(ECTN$영암천.TN, 1)
diff1_영암천1.EC <- diff(ECTN$영암천1.EC, 1)
diff1_영암천1.TN <- diff(ECTN$영암천1.TN, 1)
diff1_영산호2.EC <- as.data.frame(diff(ECTN$영산호2.EC, 1))
diff1_영산호2.TN <- as.data.frame(diff(ECTN$영산호2.TN, 1))
diff1_영암천.EC <- as.data.frame(diff(ECTN$영암천.EC, 1))
diff1_영암천.TN <- as.data.frame(diff(ECTN$영암천.TN, 1))
diff1_영암천1.EC <- as.data.frame(diff(ECTN$영암천1.EC, 1))
diff1_영암천1.TN <- as.data.frame(diff(ECTN$영암천1.TN, 1))
ECTN1 <- cbind(diff1_영산호2.EC, diff1_영산호2.TN,
diff1_영암천.EC, diff1_영암천.TN,
diff1_영암천1.EC, diff1_영암천1.TN)
View(ECTN1)
par(mfrow=c(3,2))
plot.ts(ECTN1$diff1_영산호2.EC, main="영산호2(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영산호2.TN, main="영산호2(T-N) 1시차 차분")
plot.ts(ECTN1$diff1_영암천.EC, main="영암천(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영암천.TN, main="영암천(T-N) 1시차 차분")
plot.ts(ECTN1$diff1_영암천1.EC, main="영암천1(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영암천1.TN, main="영암천1(T-N) 1시차 차분")
par(mfrow=c(1,1))
View(ECTN1)
diff1_영산호2.EC <- as.data.frame(diff(ECTN$영산호2.EC, 1))
diff1_영산호2.TN <- as.data.frame(diff(ECTN$영산호2.TN, 1))
diff1_영암천.EC <- as.data.frame(diff(ECTN$영암천.EC, 1))
diff1_영암천.TN <- as.data.frame(diff(ECTN$영암천.TN, 1))
diff1_영암천1.EC <- as.data.frame(diff(ECTN$영암천1.EC, 1))
diff1_영암천1.TN <- as.data.frame(diff(ECTN$영암천1.TN, 1))
ECTN1 <- cbind(diff1_영산호2.EC, diff1_영산호2.TN,
diff1_영암천.EC, diff1_영암천.TN,
diff1_영암천1.EC, diff1_영암천1.TN)
colnames(ECTN1) <- c('diff1_영산호2.EC', 'diff1_영산호2.TN',
'diff1_영암천.EC', 'diff1_영암천.TN',
'diff1_영암천1.EC', 'diff1_영암천1.TN')
View(ECTN1)
par(mfrow=c(3,2))
plot.ts(ECTN1$diff1_영산호2.EC, main="영산호2(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영산호2.TN, main="영산호2(T-N) 1시차 차분")
plot.ts(ECTN1$diff1_영암천.EC, main="영암천(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영암천.TN, main="영암천(T-N) 1시차 차분")
plot.ts(ECTN1$diff1_영암천1.EC, main="영암천1(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영암천1.TN, main="영암천1(T-N) 1시차 차분")
par(mfrow=c(1,1))
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=1)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=1)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=1)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=1)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=2)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=2)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=2)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=2)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=3)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=3)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=3)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=3)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=4)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=4)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=4)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=4)
e
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=5)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=5)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=5)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=5)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=6)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=6)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=6)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=6)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=7)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=7)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=7)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=7)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=8)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=8)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=8)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=8)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=6)
grangertest(ECTN1$diff1_영암천.TN ~ ECTN1$diff1_영산호2.TN, order=6)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=6)
grangertest(ECTN1$diff1_영암천1.TN ~ ECTN1$diff1_영산호2.TN, order=6)
# 인과관계 검정 (결과 ~ 원인)
# 비교군
grangertest(ECTN1$diff1_영암천.EC ~ ECTN1$diff1_영산호2.EC, order=6)
# 대조군
grangertest(ECTN1$diff1_영암천1.EC ~ ECTN1$diff1_영산호2.EC, order=6)
ndiffs(ECTN$영산호2.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영산호2.TN, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천.TN, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천1.EC, alpha=0.05, test=c("kpss"))
ndiffs(ECTN$영암천1.TN, alpha=0.05, test=c("kpss"))
par(mfrow=c(3,2))
attach(ECTN)
plot.ts(영산호2.EC, main="영산호2(EC)")
plot.ts(영산호2.TN, main="영산호2(T-N)")
plot.ts(영암천.EC, main="영암천(EC)")
plot.ts(영암천.TN, main="영암천(T-N)")
plot.ts(영암천1.EC, main="영암천1(EC)")
plot.ts(영암천1.TN, main="영암천1(T-N)")
par(mfrow=c(1,1))
par(mfrow=c(3,2))
plot.ts(ECTN1$diff1_영산호2.EC, main="영산호2(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영산호2.TN, main="영산호2(T-N) 1시차 차분")
plot.ts(ECTN1$diff1_영암천.EC, main="영암천(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영암천.TN, main="영암천(T-N) 1시차 차분")
plot.ts(ECTN1$diff1_영암천1.EC, main="영암천1(EC) 1시차 차분")
plot.ts(ECTN1$diff1_영암천1.TN, main="영암천1(T-N) 1시차 차분")
par(mfrow=c(1,1))
# Data loading
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별.csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
View(ECTN)
# Data loading
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별.csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
View(ECTN)
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별 (무안1, 영산호3, 삼포천2).csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
View(ECTN)
library(kohonen)
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=7, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
coolBlueHotRed <- function(n, alpha=1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
par(mfrow=c(3,2))
for (i in 1:6) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
library(kohonen)
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=7, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
coolBlueHotRed <- function(n, alpha=1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
par(mfrow=c(3,2))
for (i in 1:6) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
library(kohonen)
# Original
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=7, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
# Data loading
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별 (무안1, 영산호3, 삼포천2).csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
View(ECTN)
library(kohonen)
# Original
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=7, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
coolBlueHotRed <- function(n, alpha=1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
par(mfrow=c(3,2))
for (i in 1:6) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
library(kohonen)
# Original
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=7, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
# Data loading
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별 (무안1, 영산호3, 삼포천2).csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
library(kohonen)
# Original
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=7, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
View(ECTN)
# Data loading
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별 (무안1, 영산호3, 삼포천2).csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
View(ECTN)
library(kohonen)
# Original
ECTN_matrix <- as.matrix(ECTN)
View(ECTN_matrix)
som_model <- som(ECTN_matrix, grid=som_grid)
som_grid <- somgrid(xdim=6, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
coolBlueHotRed <- function(n, alpha=1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
par(mfrow=c(3,2))
for (i in 1:6) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
# Data loading
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별.csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
View(ECTN)
df <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/SOM 패턴분석 월별.csv",
header=T, sep=",")
rownames(df) <- df[,1]
ECTN <- data.frame(df[,-(1:3)])
library(kohonen)
ECTN_matrix <- as.matrix(ECTN)
som_grid <- somgrid(xdim=6, ydim=12, topo="hexagonal")
som_model <- som(ECTN_matrix, grid=som_grid)
coolBlueHotRed <- function(n, alpha=1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
par(mfrow=c(3,2))
for (i in 7:12) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
# Data loading
region <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/지점별 평균 데이터.csv",
header=T, sep=",")
rownames(region) <- region[,1]
region <- data.frame(region[,-1])
region <- read.csv("D:/Workplace/Environmental_Statistics_with_R/수질데이터분석(논문)/1번째/전처리 후 데이터/지점별 평균 데이터.csv",
header=T, sep=",")
rownames(region) <- region[,1]
region <- data.frame(region[,-1])
View(region)
library(SOMbrero)
library(kohonen)
region_scale <- data.frame(scale(region))
region_scale_matrix <- as.matrix(region_scale)
som_grid <- somgrid(xdim=3, ydim=1, topo="hexagonal")
som_model1 <- som(region_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=region_scale, dimension=c(1,3),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
plot(som_model1, what="obs", type="names", print.title=T, scale=c(1,1))
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
2977610-779730
2280800*0.6
55000/8
water <- read.csv("C:/Users/HSY/Desktop/2020년 1월 수질측정망.csv",
sep=",", header=T)
View(water)
install.packages("psych")
library(psych)
# KMO and Bartlett's test
KMO(water)
cortest.bartlett(cor(water), n=nrow(water))
# Component matrix (?ּ???ȸ??)
PCA <- principal(water, nfactor=3, rotate="none", score=T) # The factor is the number of PC
PCA
?prcomp
PCA_rot <- principal(water, nfactor=3, rotate="varimax", score=T) # varimax rotate
PCA_rot
screeplot(PCA_rot, type="l")
# Number of principal components (?ּ??км?)
water_pca <- prcomp(water, center=T, scale.=T)
water_pca
screeplot(water_pca, type="l")
biplot(water_pca, main="Biplot")
# Number of principal components
water_pca <- prcomp(water, center=T, scale.=T)
water_pca
# reference : https://www.rstatisticsblog.com/data-science-in-action/lasso-regression/
install.packages("glmnet")
library(glmnet)
# Install packages
install.packages("lars")
# reference : https://rpago.tistory.com/59
install.packages("glmnet")
### Reading data
water1 <- read.csv("D:/Workplace/Environmental_Statistics_with_R/논문데이터분석/분석자료/csv자료/1_담양(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
water_scale <- as.data.frame(water_scale)
water_scale_1 <- water_scale[,-(1:4)]
water_scale_1 <- water_scale_1[,-(10:11)]
library(psych)
# KMO and Bartlett's test
KMO(water_scale_1)
cortest.bartlett(cor(water_scale_1, method="spearman"), n=nrow(water_scale_1))
water_pca <- prcomp(water_scale_1, center=T, scale.=T)
water_pca
screeplot(water_pca, type="l")
PCA_rot <- principal(water_scale_1, nfactor=3, rotate="varimax", score=T) # varimax rotate
PCA_rot
### Reading data
water1 <- read.csv("D:/Workplace/Environmental_Statistics_with_R/논문데이터분석/분석자료/csv자료/2_우치(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
water_scale <- as.data.frame(water_scale)
water_scale_1 <- water_scale[,-(1:4)]
water_scale_1 <- water_scale_1[,-(10:11)]
# KMO and Bartlett's test
KMO(water_scale_1)
cortest.bartlett(cor(water_scale_1, method="spearman"), n=nrow(water_scale_1))
water_pca <- prcomp(water_scale_1, center=T, scale.=T)
water_pca
screeplot(water_pca, type="l")
?prcomp
PCA_rot <- principal(water_scale_1, nfactor=3, rotate="varimax", score=T) # varimax rotate
PCA_rot
biplot(PCA_rot, main="Biplot")
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/광산 10년 월평균 자료.csv", sep=",", header=T)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water, file='광산 10년 월평균 자료_표준화.csv', row.names=F)
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/광산 10년 월평균 자료.csv", sep=",", header=T)
water_scale <- scale(water)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water_scale, file='광산 10년 월평균 자료_표준화.csv', row.names=F)
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/광산rawdata.csv", sep=",", header=T)
water_scale <- scale(water)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water_scale, file='광산rawdata_표준화.csv', row.names=F)
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/광산수질자료(기하평균).csv", sep=",", header=T)
water_scale <- scale(water)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water_scale, file='광산수질자료(기하평균).csv', row.names=F)
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/광산수질자료(기하평균).csv", sep=",", header=T)
water_scale <- scale(water)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water_scale, file='광산수질자료(기하평균)_표준화.csv', row.names=F)
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/우치 10년 월평균 자료.csv", sep=",", header=T)
water_scale <- scale(water)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water_scale, file='우치 10년 월평균 자료_표준화.csv', row.names=F)
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/우치rawdata.csv", sep=",", header=T)
water_scale <- scale(water)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water_scale, file='우치rawdata_표준화.csv', row.names=F)
water <- read.csv("C:/Users/HSY/Desktop/표준화 자료 요청/csv 파일/우치수질자료(기하평균).csv", sep=",", header=T)
water_scale <- scale(water)
setwd("C:/Users/HSY/Desktop/표준화 자료 요청/표준화 데이터")
write.csv(water_scale, file='우치수질자료(기하평균)_표준화.csv', row.names=F)
