############################## assigning and data generation
x <- 1
y <- "A"
my.vec <- c(1, 5, 6, 10)
my.nums <- 12:24
x
y
my.vec
my.nums
############################# Indexing
# vector generation
x <- 1:10
# assign the component's name
names(x) <- c("first", "second", "third", "fourth", "fifth")
# select 1st and 5th component
i <- c(1,5)
x[i]
# select all components except 1st, 5th and 8th component
x[-c(i,8)]
############################ Logical operator
# select component of vector with condition
x <- 1:10
x[x < 5]
?map
## Attach library
library(mapdata)
?map
map('worldHires', region=c('Korea', 'Japan', 'China'), lwd=3,
wrap=c(-30,30))
map('worldHires', region=c('Korea', 'Japan', 'China'), lwd=3,
wrap=c(-50,30))
map('worldHires', region=c('Korea', 'Japan', 'China'), lwd=3,
wrap=c(-50,30,30,30))
map('worldHires', region=c('Korea', 'Japan', 'China'), lwd=3,
wrap=c(-90,30))
map('worldHires', region=c('Korea', 'Japan', 'China'), lwd=3,
wrap=c(-60,30))
map('worldHires', region=c('Korea', 'Japan', 'China'), lwd=3,
wrap=c(-55,40))
map('worldHires', region=c('Korea', 'Japan', 'China'), lwd=3,
wrap=c(-55,50))
map('worldHires', region=c('North Korea', 'Southth Korea', 'Japan', 'China'), lwd=3,
wrap=c(-55,50))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-55,50))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-20,50))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-20,20))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-20,40))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-20,60))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-30,60))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-30,50))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-30,60))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3,
wrap=c(-20,60))
map('worldHires', region=c('North Korea', 'South Korea', 'Japan', 'China'), lwd=3)
map('worldHires', region=c('South Korea','North Korea', 'Japan', 'China'), lwd=3)
map('worldHires', region=c('South Korea'), col = 'darkseagreen2', add = TRUE, fill = TRUE)
map('worldHires', region=c('North Korea'), col = 'darkseagreen2', add = TRUE, fill = TRUE)
map('worldHires', region=c('Japan'), col = 'darkseagreen2',add = TRUE, fill = TRUE)
map('worldHires', region=c('China'), col = 'darkseagreen2',add = TRUE, fill = TRUE)
map('worldHires', region=c('South Korea'), col = 'lightcyan', add = TRUE, fill = TRUE)
map('worldHires', region=c('North Korea'), col = 'lightcyan', add = TRUE, fill = TRUE)
map('worldHires', region=c('Japan'), col = 'lightcyan',add = TRUE, fill = TRUE)
map('worldHires', region=c('China'), col = 'lightcyan',add = TRUE, fill = TRUE)
map('worldHires', region=c('South Korea','North Korea', 'Japan', 'China'), lwd=3, bg="royalblue")
map('worldHires', region=c('South Korea'), col = 'lightcyan', add = TRUE, fill = TRUE)
map('worldHires', region=c('North Korea'), col = 'lightcyan', add = TRUE, fill = TRUE)
map('worldHires', region=c('Japan'), col = 'lightcyan',add = TRUE, fill = TRUE)
map('worldHires', region=c('China'), col = 'lightcyan',add = TRUE, fill = TRUE)
map('worldHires', region=c('South Korea','North Korea', 'Japan', 'China'), lwd=3)
q()
setwd("C:/Users/ESEL_computer/Desktop/R_version2/Ch 14_Cluster Analysis")
## Clear workspace
dev.off()     # clear all plots
rm(list=ls()) # clear global Environmental
cat("\f")     # clear Console
## Attach library
library(factoextra)             # for determining optimal number of clusters
library(DescTools)              # for post-hoc analysis
## Data loading
df <- read.csv("testCA.csv", header=TRUE)
data <- data.frame(df) # raw data saved as variable 'data'
## Calculation of distance
dis.matrix <- dist(as.matrix(data), method="euclidean")
## Cluster analysis
ca <- hclust(dis.matrix, 'ward.D2') # Ward's method
plot(ca, hang = -1)
rect.hclust(ca, k=3, border=c(2:4)) # k: number of clusters
## Determining optimal number of clusters
CN <- fviz_nbclust(data, FUN=hcut, method="wss")
CN
coeffdelta <- CN$data[-length(CN$data[,2]),2] - CN$data[-1,2]
cbind(CN$data[-1,], coeffdelta)
## Clustering table
Cluster <- cutree(ca, 3) # number of clusters
Clustertable <- cbind(data, Cluster)
Clustertable
## One-way ANOVA
anova_selfc <- lm(data$Selfconcept ~ as.factor(Clustertable$Cluster))
anova_absen <- lm(data$Absence ~ as.factor(Clustertable$Cluster))
anova_nsmoke <- lm(data$Nonsmokingpolice ~ as.factor(Clustertable$Cluster))
anova(anova_selfc)
anova(anova_absen)
anova(anova_nsmoke)
## post-hoc analysis
PostHocTest(aov(anova_selfc), method="hsd")   # Tukey HSD
PostHocTest(aov(anova_absen), method="hsd")   # Tukey HSD
PostHocTest(aov(anova_nsmoke), method="hsd")  # Tukey HSD
## Visualization
plot(Clustertable[4:6], cex=1.5,
pch=Clustertable$Cluster, col=Clustertable$Cluster)
par(new=TRUE)
par(fig=c(0, 1, 0, 1), oma=c(0, 0, 0, 0), mar=c(0, 0, 0, 0), new=TRUE)
plot(0, 0, type='n', bty='n', xaxt='n', yaxt='n')
legend("bottom", c("Cluster1","Cluster2","Cluster3"),
bty="n", pch=1:3, col=1:3, horiz=TRUE)
## Clear workspace
dev.off()     # clear all plots
rm(list=ls()) # clear global Environmental
cat("\f")     # clear Console
## Data loading
df <- read.csv("kmeans.csv", header=TRUE)
data <- data.frame(df) # raw data saved as variable 'data'
## Variables assigning
DO <- data$DO
BOD <- data$BOD
COD <- data$COD
SS <- data$SS
TN <- data$TN
TP <- data$TP
## k-means test
datatest <- data.frame(cbind(DO,BOD,SS,TP))
ktest <- kmeans(datatest, 4, nstart=30, algorithm="Lloyd") # number of clusters: 4
ktest
## One-way ANOVA
anova_do <- lm(data$DO ~ as.factor(ktest$cluster))
anova_bod <- lm(data$BOD ~ as.factor(ktest$cluster))
anova_ss <- lm(data$SS ~ as.factor(ktest$cluster))
anova_tp <- lm(data$TP ~ as.factor(ktest$cluster))
anova(anova_do)
anova(anova_bod)
anova(anova_ss)
anova(anova_tp)
