plot(object, plottype="Cp")
round(object$beta, 4)
coef(object, s=15)
# Select best model using crossvalidation
cv <- lars::cv.lars(X, y, plot.it=FALSE, mode="step")
idx <- which.max(cv$cv - cv$cv.error <= min(cv$cv))
coef(object, s=6)
install.packages("ISLR")
install.packages("glmnet")
install.packages("dplyr")
install.packages("tidyr")
library(ISLR)
library(glmnet)
library(dplyr)
library(tidyr)
grid = 10^seq(10, -2, length = 100)
ridge_mod = glmnet(X, y, alpha = 1, lambda = grid)
dim(coef(ridge_mod))
plot(ridge_mod)    # Draw plot of coefficients
predict(object, s = 6, type = "coefficients")
?predict
# Prediction
predict(object, s=6, newdata=X, type="response")
# Prediction
predict(object, s=6, newdata=X, type="fit")
# Prediction
p <- predict(object, s=6, newdata=X, type="fit")
p
View(X)
# Prediction
p <- predict(object, s=6, newdata=X, type="predicted")
# Prediction
p <- predict(object, s=6, newdata=X, type="fit")
# Prediction
p <- predict(object, s=6, newdata=X, type="coefficient")
p
p$coefficient
is.vector(p$coefficient)
View(X)
predicted <- X%*%p$coefficient
predicted
# ROC curve
install.packages("Epi")
library(Epi)
label <- y
ROC(predicted, label)
predicted
max(predicted)-min(predicted)
max(label)-min(label)
ROC(predicted/(max(predicted)-min(predicted)), label/(max(label)-min(label)))
predicted/(max(predicted)-min(predicted))
label/(max(label)-min(label))
ROC(predicted/max(predicted), label/max(label))
label
water <- read.csv("C:/Users/Nier/Desktop/2020년 02월 수질측정망.csv",
sep=",", header=T)
View(water)
library(psych)
# Bartlett's test
cortest.bartlett(cor(water), n=nrow(water))
# Number of principal components (주성분분석)
water_pca <- prcomp(water, center=T, scale.=T)
water_pca
# Number of principal components (주성분분석)
water_pca <- prcomp(water, center=T, scale.=T)
water_pca
# Number of principal components
water_pca <- prcomp(water, center=T, scale.=T)
water_pca
# Number of principal components
water_pca <- prcomp(water, center=T, scale.=T)
water_pca
screeplot(water_pca, type="l")
biplot(water_pca, main="Biplot")
summary(water_pca)
# Number of principal components
water_pca <- prcomp(water, center=T, scale.=T)
water_pca
summary(water_pca)
# Reading data
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석/전체지점.csv", sep=",", header=T)
### Reading data
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석/전체지점.csv", sep=",", header=T)
View(water)
water1 <- water[,-(18:21)]
View(water1)
library(corrplot)
library(ggplot2)
library(ggcorrplot)
X <- round(cor(water1),4)
pairs(X) # Correlation plot 1
corrplot(X) # Correlation plot 2
X # Correlation matrix
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(water5_2)
p.mat
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(water1)
p.mat
ggcorrplot(X, hc.order=T, type="lower", lab=T) +
ggtitle("Correlation plot") +
theme(plot.title = element_text(family = "serif",
face = "bold", hjust = 0.5,
size = 15, color = "black"))
ggcorrplot(X, hc.order=T, type="lower", lab=T) +
ggtitle("Correlation plot for water quality data") +
theme(plot.title = element_text(family = "serif",
face = "bold", hjust = 0.5,
size = 15, color = "black"))
ggcorrplot(X, hc.order=T, type="lower", p.mat=p.mat) +
ggtitle("Correlation plot for water quality data") +
theme(plot.title = element_text(family = "serif",
face = "bold", hjust = 0.5,
size = 15, color = "black"))
library(lars)
# Variables
colnames(water1)
# Linear regression model
linearmod <- lm(COD ~ ., data=water1)
linearmod # coefficients
summary(linearmod)
# Lasso (Variation of coefficient with s(threshold))
X <- as.matrix(water1[,-6])
y <- as.matrix(water1[,6])
object <- lars(X, y, type="lasso")
plot(object)
# Select regression model with Cp
plot(object, plottype="Cp")
round(object$beta, 4)
coef(object, s=17)
# Linear regression model
linearmod <- lm(BOD ~ ., data=water1)
# Lasso (Variation of coefficient with s(threshold))
X <- as.matrix(water1[,-5])
y <- as.matrix(water1[,5])
object <- lars(X, y, type="lasso")
plot(object)
# Select regression model with Cp
plot(object, plottype="Cp")
round(object$beta, 4)
coef(object, s=16)
coef(object, s=10)
### Reading data
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석/전체지점.csv", sep=",", header=T)
water1 <- water[,-(18:21)]
View(water)
water2 <- water[,-11]
View(water2)
water2 <- water2[,-(14:16)]
View(water2)
library(corrplot)
library(ggplot2)
library(ggcorrplot)
X <- round(cor(water2),4)
pairs(X) # Correlation plot 1
corrplot(X) # Correlation plot 2
X # Correlation matrix
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(water2)
p.mat
ggcorrplot(X, hc.order=T, type="lower", lab=T) +
ggtitle("Correlation plot for water quality data") +
theme(plot.title = element_text(family = "serif",
face = "bold", hjust = 0.5,
size = 15, color = "black"))
ggcorrplot(X, hc.order=T, type="lower", p.mat=p.mat) +
ggtitle("Correlation plot for water quality data") +
theme(plot.title = element_text(family = "serif",
face = "bold", hjust = 0.5,
size = 15, color = "black"))
step(lm(BOD ~ ., data=water2), direction="both") # Stepwise Regression
library(lars)
# Variables
colnames(water2)
# Variables
colnames(water2)
X <- as.matrix(water2[,-5])
y <- as.matrix(water2[,5])
object <- lars(X, y, type="lasso")
plot(object)
# Select regression model with Cp
plot(object, plottype="Cp")
round(object$beta, 4)
round(object$beta, 4)
coef(object, s=16)
?predict
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석/전체지점.csv", sep=",", header=T)
View(water)
water1 <- water[,-(18:21)]
View(water1)
water2 <- water[,-11]
water2 <- water2[,-(14:16)]
View(water2)
### Reading data
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석/전체지점.csv", sep=",", header=T)
### Reading data
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석/전체지점.csv", sep=",", header=T)
### Reading data
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석/전체지점.csv", sep=",", header=T)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료 송부/5year/csv 파일/1.담양(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water_scale <- scale(water1_quality)
water1_scale <- cbind(water1_date, water_scale)
View(water1)
View(water1_scale)
library(corrplot)
library(ggplot2)
library(ggcorrplot)
X <- round(cor(water1, method='spearman'),4)
pairs(X) # Correlation plot 1
corrplot(X) # Correlation plot 2
X # Correlation matrix
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(water1, method='spearman')
p.mat
View(water1_quality)
X <- round(cor(water1_quality, method='spearman'),4)
pairs(X) # Correlation plot 1
corrplot(X) # Correlation plot 2
X # Correlation matrix
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(water1_quality, method='spearman')
p.mat
ggcorrplot(X, hc.order=T, type="lower", lab=T) +
ggtitle("Correlation plot for water quality data") +
theme(plot.title = element_text(family = "serif",
face = "bold", hjust = 0.5,
size = 15, color = "black"))
ggcorrplot(X, hc.order=T, type="lower", p.mat=p.mat) +
ggtitle("Correlation plot for water quality data") +
theme(plot.title = element_text(family = "serif",
face = "bold", hjust = 0.5,
size = 15, color = "black"))
step(lm(BOD ~ ., data=water1_quality), direction="both") # Stepwise Regression
library(lars)
# Linear regression model
linearmod <- lm(BOD ~ ., data=water_scale)
water_scale <- as.data.frame(water1_quality)
# Linear regression model
linearmod <- lm(BOD ~ ., data=water_scale)
step(lm(BOD ~ ., data=water_scale), direction="both") # Stepwise Regression
library(lars)
View(water_scale)
water_scale <- as.data.frame(water_scale)
View(water_scale)
View(water1_scale)
View(water1_quality)
## normalization
water_scale <- scale(water1_quality)
View(water_scale)
water_scale <- as.data.frame(water_scale)
View(water_scale)
step(lm(BOD ~ ., data=water_scale), direction="both") # Stepwise Regression
library(lars)
# Variables
colnames(water_scale)
View(water_scale)
# Lasso (Variation of coefficient with s(threshold))
X <- as.matrix(water_scale[,-3])
y <- as.matrix(water_scale[,3])
object <- lars(X, y, type="lasso")
plot(object)
# Select regression model with Cp
plot(object, plottype="Cp")
round(object$beta, 4)
coef(object, s=16)
library(glmnet)
sh <- 10^seq(10,-2,length=100)
lasso <- glmnet(X, y, alpha=1, lambda=sh)
dim(coef(lasso))
plot(lasso)
set.seed(1)
cv.lasso <- cv.glmnet(X, y, alpha=1)
plot(cv.lasso)
bestlam.lasso <- cv.lasso$lambda.min
bestlam.lasso
best.lasso <- glmnet(X, y, alpha=1, lambda=sh)
predict(best.lasso, s=bestlam.lasso, type="coefficients")
library(lmtest)
View(water1_scale)
attach(water1_scale)
attach(water1_scale)
plot.ts(SS, main="담양(SS)")
plot.ts(BOD, main="담양(BOD)")
require(forecast)
par(mfrow=c(1,2))
attach(water1_scale)
plot.ts(SS, main="담양(SS)")
plot.ts(BOD, main="담양(BOD)")
par(mfrow=c(1,1))
require(forecast)
# KPSS test (Finding difference for stationarity)
ndiffs(water1_scale$SS, alpha=0.05, test=c("kpss")) # 1
ndiffs(water1_scale$BOD, alpha=0.05, test=c("kpss")) # 1
grangertest(water1_scale$BOD ~ water1_scale$SS, order=1)
grangertest(water1_scale$BOD ~ water1_scale$SS, order=2)
grangertest(water1_scale$BOD ~ water1_scale$SS, order=3)
par(mfrow=c(1,2))
attach(water1_scale)
plot.ts(pH, main="담양(pH)")
plot.ts(BOD, main="담양(BOD)")
par(mfrow=c(1,1))
# KPSS test (Finding difference for stationarity)
ndiffs(water1_scale$pH, alpha=0.05, test=c("kpss")) # 1
ndiffs(water1_scale$BOD, alpha=0.05, test=c("kpss")) # 1
# difference
diff_pH <- diff(water1_scale$pH, 1)
diff_BOD <- diff(water1_scale$BOD, 1)
par(mfrow=c(1,2))
plot.ts(diff_pH, main="담양(pH) 시차1 차분")
plot.ts(diff_BOD, main="담양(BOD) 시차1 차분")
par(mfrow=c(1,1))
grangertest(diff_BOD ~ diff_pH, order=3)
grangertest(diff_BOD ~ diff_pH, order=1)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료 송부/5year/csv 파일/1.담양(5년).csv", sep=",", header=T)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료 송부/5year/csv자료/1_담양(5년).csv", sep=",", header=T)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/1_담양(5년).csv", sep=",", header=T)
View(water1)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
View(water1_quality)
View(water1_quality)
water1_quality_1 <- water1_quality[,-11]
View(water1_quality_1)
water1_quality_1 <- water1_quality[,-14]
View(water1_quality_1)
View(water1_quality_1)
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/1_담양(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality1[,-14]
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/1_담양(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
View(water1_quality_1)
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
View(water1_scale)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/1_담양(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='1_담양(5년)_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/2_우치(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='2_우치(5년)_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/3_광주1(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='3_광주1(5년)_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/4_광주2(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='4_광주2(5년)_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/5_광주2-1(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='5_광주2-1(5년)_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/6_광산(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='6_광산(5년)_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/7_나주(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='7_나주_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/8_영산포(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='8_영산포_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/9_죽산(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='9_죽산_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/10_영산포-1(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='10_영산포-1_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/11_함평(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='11_함평_표준화.csv', row.names=F)
### Reading data
water1 <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/csv자료/12_무안1(5년).csv", sep=",", header=T)
water1_date <- water1[,1:3]
water1_quality <- water1[,-(1:3)]
## normalization
water1_quality$logTC <- log(water1_quality$TC)
water1_quality$logFC <- log(water1_quality$FC)
water1_quality_1 <- water1_quality[,-11]
water1_quality_1 <- water1_quality_1[,-14]
water_scale <- scale(water1_quality_1)
water1_scale <- cbind(water1_date, water_scale)
setwd('C:/Users/Nier/Desktop/논문데이터분석_hsy/분석자료/표준화')
write.csv(water1_scale, file='12_무안1_표준화.csv', row.names=F)
