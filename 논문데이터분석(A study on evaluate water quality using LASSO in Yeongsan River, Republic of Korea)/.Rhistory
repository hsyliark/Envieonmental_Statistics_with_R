install.packages("NbClust")
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/논문데이터분석(Evaluation and Grade Classification of River Water Quality Using Statistical Techniques)/군집분석.csv", sep=",", header=T)
water_name <- water[,1]
water <- water[,-1]
rownames(water) <- water_name
View(water)
library(SOMbrero)
library(kohonen)
# Normalization of data
water_scale <- data.frame(scale(water))
water_scale_matrix <- as.matrix(water_scale)
library(kohonen)
som_grid <- somgrid(xdim=1, ydim=4, topo="hexagonal")
som_model1 <- som(month_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=month_scale, dimension=c(4,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
som_grid <- somgrid(xdim=1, ydim=4, topo="hexagonal")
som_model1 <- som(water_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=water_scale, dimension=c(4,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
table(som_model2$clustering)
plot(som_model2, what="prototypes", type="umatrix", print.title=T)
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
plot(som_model1, type="counts", main="cluster size")
par(mfrow=c(1,2))
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
par(mfrow=c(1,1))
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="prototypes", type="umatrix", print.title=T)
table(som_model2$clustering)
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
# Training the SOM model
som_grid <- somgrid(xdim=1, ydim=2, topo="hexagonal")
som_grid <- somgrid(xdim=1, ydim=2, topo="hexagonal")
som_model1 <- som(water_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=water_scale, dimension=c(2,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
water <- read.csv("C:/Users/Nier/Desktop/논문데이터분석_hsy/논문데이터분석(Evaluation and Grade Classification of River Water Quality Using Statistical Techniques)/cluster.csv", sep=",", header=T)
water_name <- water[,1]
water <- water[,-1]
rownames(water) <- water_name
View(water)
water_scale <- data.frame(scale(water))
water_scale_matrix <- as.matrix(water_scale)
som_grid <- somgrid(xdim=1, ydim=2, topo="hexagonal")
som_model1 <- som(water_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=water_scale, dimension=c(2,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
som_grid <- somgrid(xdim=1, ydim=4, topo="hexagonal")
som_model1 <- som(water_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=water_scale, dimension=c(4,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
# Distance matrix
water_scale <- scale(water)
d <- dist(water_scale, method="euclidean")
as.matrix(d)[1:5,1:5]
View(water_scale)
# Apply Distance matrix model
fit <- hclust(d, method="ward.D")
library(NbClust)
nc <- NbClust(water_scale, distance="euclidean", method="ward.D")
nc
par(mfrow=c(1,1))
plot(fit)
rect.hclust(fit, k=2)
