## PCA
data_all <- read.csv("D:/Workplace/Environmental_Statistics_with_R/논문데이터분석(Evaluation and Grade Classification of River Water Quality Using Statistical Techniques)/통계분석요청/요인분석,패턴분석.csv", sep=",", header=T)
data_all_scale <- scale(data_all)
View(data_all_scale)
library(psych)
# KMO and Bartlett's test
KMO(data_all_scale)
cortest.bartlett(cor(data_all_scale, method="spearman"), n=nrow(data_all_scale))
View(data_all)
data_all <- data_all[,-12]
data_all_scale <- scale(data_all)
# KMO and Bartlett's test
KMO(data_all_scale)
cortest.bartlett(cor(data_all_scale, method="spearman"), n=nrow(data_all_scale))
water_pca <- prcomp(data_all_scale, center=T, scale.=T)
water_pca
screeplot(water_pca, type="l")
PCA_rot <- principal(data_all_scale, nfactor=2, rotate="varimax", score=T) # varimax rotate
PCA_rot
biplot(PCA_rot)
PCA_rot <- principal(data_all_scale, nfactor=3, rotate="varimax", score=T) # varimax rotate
PCA_rot
biplot(PCA_rot)
PCA_rot <- principal(data_all_scale, nfactor=4, rotate="varimax", score=T) # varimax rotate
PCA_rot
biplot(PCA_rot)
library(kohonen)
data_all_matrix <- as.matrix(data_all)
5174^1/2
3^2
5174^(1/2)
71^2
72^2
som_grid <- somgrid(xdim=70, ydim=70, topo="hexagonal")
som_model <- som(data_all_matrix, grid=som_grid)
coolBlueHotRed <- function(n, alpha=1) {rainbow(n, end=4/6, alpha=alpha)[n:1]}
View(data_all)
par(mfrow=c(2,2))
for (i in 1:11) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
par(mfrow=c(1,1))
for (i in 1:11) {
plot(som_model, type="property", property=getCodes(som_model)[,i],
main=colnames(getCodes(som_model))[i], palette.name=coolBlueHotRed)}
par(mfrow=c(1,1))
water <- read.csv("D:/Workplace/Environmental_Statistics_with_R/논문데이터분석(Evaluation and Grade Classification of River Water Quality Using Statistical Techniques)/통계분석요청/군집분석.csv", sep=",", header=T)
water_name <- water[,1]
water <- water[,-1]
rownames(water) <- water_name
View(water)
water_scale <- scale(water)
d <- dist(water_scale, method="euclidean")
as.matrix(d)[1:5,1:5]
# Apply Distance matrix model
fit <- hclust(d, method="ward.D")
library(NbClust)
nc <- NbClust(water_scale, distance="euclidean", method="ward.D")
nc
par(mfrow=c(1,1))
plot(fit)
rect.hclust(fit, k=2)
par(mfrow=c(1,1))
plot(fit)
rect.hclust(fit, k=2)
library(SOMbrero)
library(kohonen)
water_scale <- data.frame(scale(water))
water_scale_matrix <- as.matrix(water_scale)
som_grid <- somgrid(xdim=1, ydim=2, topo="hexagonal")
som_model1 <- som(water_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=water_scale, dimension=c(2,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
som_grid <- somgrid(xdim=1, ydim=3, topo="hexagonal")
som_model1 <- som(water_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=water_scale, dimension=c(3,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
som_grid <- somgrid(xdim=1, ydim=4, topo="hexagonal")
som_model1 <- som(water_scale_matrix, grid=som_grid)
str(som_model1)
som_model2 <- trainSOM(x.data=water_scale, dimension=c(4,1),
nb.save=10, maxit=2000, scaling="none",
radius.type="letremy")
str(som_model2)
# Visualization
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
par(mfrow=c(1,2))
plot(som_model1, main="feature distribution")
plot(som_model2, what="obs", type="names", print.title=T, scale=c(1,1))
par(mfrow=c(1,1))
# Clustering results
clusters <- superClass(model, k=5)
